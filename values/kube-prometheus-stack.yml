## Refs: https://github.com/prometheus-community/helm-charts/blob/main/charts/kube-prometheus-stack/values.yaml
##
## Default values for kube-prometheus-stack.
## This is a YAML-formatted file.
## Declare variables to be passed into your templates.
##

%{~ if trimspace(regcred) != "" ~}
global:
  imagePullSecrets:
    - name: ${regcred}
%{~ endif }
## Using default values from https://github.com/grafana/helm-charts/blob/main/charts/grafana/values.yaml
##
grafana:
  %{~ if trimspace(grafana_ingress_host) != "" ~}
  ingress:
    ## If true, Grafana Ingress will be created
    ##
    enabled: true 
    annotations:
      kubernetes.io/ingress.class: ${grafana_ingress_class}
      %{~ if trimspace(grafana_cluster_issuer_name) != "" ~}
      cert-manager.io/cluster-issuer: "${grafana_cluster_issuer_name}"
      acme.cert-manager.io/http01-edit-in-place: "true"
      %{~ endif ~}
    hosts:
      - ${grafana_ingress_host}
    %{~ if trimspace(grafana_cluster_issuer_name) != "" ~}
    tls:
      - secretName: ${grafana_cert_manager_secret_name}
        hosts:
          - ${grafana_ingress_host}
    %{~ endif ~}
  %{~ endif ~}
  %{~ if grafana_resources.cpu_requests != "" && grafana_resources.memory_requests != "" ~}
  resources:
    requests:
      cpu: ${grafana_resources.cpu_requests}
      memory: ${grafana_resources.memory_requests}
  %{~ endif ~}
  persistence:
    enabled: true
    %{~ if trimspace(storage_class_name) != "" ~}
    storageClassName: ${storage_class_name}
    %{~ endif ~}
    size: ${grafana_pv_size}
%{~ if prometheus_operator_resources.cpu_requests != "" && prometheus_operator_resources.memory_requests != "" }
prometheusOperator:
  resources:
    requests:
      cpu: ${prometheus_operator_resources.cpu_requests}
      memory: ${prometheus_operator_resources.memory_requests}
%{~ endif ~}

prometheus:
  prometheusSpec:
  %{~ if prometheus_resources.cpu_requests != "" && prometheus_resources.memory_requests != "" ~}
    resources:
      requests:
        cpu: ${prometheus_resources.cpu_requests}
        memory: ${prometheus_resources.memory_requests}
  %{~ endif ~}
    storageSpec:
      volumeClaimTemplate:
        spec:
        %{~ if trimspace(storage_class_name) != "" ~}
          storageClassName: ${storage_class_name}
        %{~ endif ~}
          resources:
            requests:
              storage: ${prometheus_pv_size}

%{~ if kube_state_metrics_resources.cpu_requests != "" && kube_state_metrics_resources.memory_requests != "" }
kube-state-metrics:
  resources:
    cpu: ${kube_state_metrics_resources.cpu_requests}
    memory: ${kube_state_metrics_resources.memory_requests}
%{~ endif ~}

# Disable Etcd metrics
kubeEtcd:
  enabled: ${kube_etcd}

# Disable Controller metrics
kubeControllerManager:
  enabled: ${kube_controller_manager}

# Disable Scheduler metrics
kubeScheduler:
  enabled: ${kube_scheduler}

alertmanager:
  enabled: ${alert_manager}
